{"version":3,"sources":["../index.js"],"names":["configure","$toggle","$unset","$splice","$push","$unshift","$pop","$shift","$sort","$remove","$swap","$assign","$set","updatePath","define","configs","separator","Array","prototype","arraySlice","slice","arrayShift","shift","arrayUnshift","unshift","arrayPush","push","arrayPop","pop","arraySplice","splice","arraySort","sort","newConfigs","Object","assign","Immutable","value","parent","path","children","childMap","modifier","args","call","arguments","actions","Error","newValue","apply","concat","change","changed","isPlainObject","x","filter","child","split","reduce","current","props","length","clone","prop","forEach","arrayOp","array","index","count","newItems","sorter","val","constructor","items","newArray","indexOf","from","to","temp","obj","values","mergedObj","undefined","key","createSelectorProxy","context","proxy","Proxy","get","target","set","thisArg","action","backToParent","traversal","node","entries","pair","Function","childFromPath","spec","keys","newChild","update","state","changes","root","specs","selector","__context__","remove","toggle","unset","swap","name"],"mappings":";;;;;;;;;;QAcgBA,S,GAAAA,S;QA0EAC,O,GAAAA,O;QAYAC,M,GAAAA,M;QA0BAC,O,GAAAA,O;QAUAC,K,GAAAA,K;QAQAC,Q,GAAAA,Q;QAQAC,I,GAAAA,I;QAOAC,M,GAAAA,M;QAOAC,K,GAAAA,K;QAYAC,O,GAAAA,O;QAMAC,K,GAAAA,K;QAQAC,O,GAAAA,O;QA2CAC,I,GAAAA,I;QA8DAC,U,GAAAA,U;QAgDAC,M,GAAAA,M;;;;AAzVhB,IAAMC,UAAU;AACdC,aAAW;AADG,CAAhB;;uBAYIC,MAAMC,S;IAPDC,U,oBAAPC,K;IACOC,U,oBAAPC,K;IACSC,Y,oBAATC,O;IACMC,S,oBAANC,I;IACKC,Q,oBAALC,G;IACQC,W,oBAARC,M;IACMC,S,oBAANC,I;AAGK,SAAShC,SAAT,CAAmBiC,UAAnB,EAA+B;AACpCC,SAAOC,MAAP,CAAcpB,OAAd,EAAuBkB,UAAvB;AACD;;IAEKG,S;AACJ,qBAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAAA;;AAC/B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;;;0BAEKC,Q,EAAU;AACd,UAAMC,OAAOxB,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAb;AACA,UAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChC,YAAIA,YAAYI,OAAhB,EAAyB;AACvBJ,qBAAWI,QAAQJ,QAAR,CAAX;AACD,SAFD,MAEO;AACL,gBAAM,IAAIK,KAAJ,kBAAwBL,QAAxB,kBAAN;AACD;AACF;AACD,UAAMM,WAAWN,SAASO,KAAT,CAAe,IAAf,EAAqB,CAAC,KAAKZ,KAAN,EAAaa,MAAb,CAAoBP,IAApB,CAArB,CAAjB;AACA,UAAIK,aAAa,KAAKX,KAAtB,EAA6B;AAC3B,aAAKA,KAAL,GAAaW,QAAb;AACA,aAAKG,MAAL;AACD;AACD,aAAO,IAAP;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKC,OAAV,EAAmB;AACjB,aAAKA,OAAL,GAAe,IAAf;AACA,YAAI,KAAKf,KAAL,YAAsBpB,KAA1B,EAAiC;AAC/B,eAAKoB,KAAL,GAAa,KAAKA,KAAL,CAAWjB,KAAX,EAAb;AACD,SAFD,MAEO,IAAIiC,cAAc,KAAKhB,KAAnB,CAAJ,EAA+B;AACpC,eAAKA,KAAL,GAAaH,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKE,KAAvB,CAAb;AACD;AACF;;AARM;AAAA;AAAA;;AAAA;AAUP,6BAAc,KAAKG,QAAnB,8HAA6B;AAAA,cAApBc,CAAoB;;AAC3B,eAAKjB,KAAL,CAAWiB,EAAEf,IAAb,IAAqBe,EAAEjB,KAAvB;AACD;AAZM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcP,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYa,MAAZ;AACD;AACF;;;mCAEc;AAAA;;AACb;AACA,WAAKb,MAAL,CAAYE,QAAZ,GAAuB,KAAKF,MAAL,CAAYE,QAAZ,CAAqBe,MAArB,CAA4B;AAAA,eAAKD,MAAM,KAAX;AAAA,OAA5B,CAAvB;AACA,aAAO,KAAKhB,MAAL,CAAYG,QAAZ,CAAqB,KAAKF,IAA1B,CAAP;AACA,aAAO,KAAKD,MAAZ;AACD;;;0BAEKC,I,EAAM;AACV,UAAIA,QAAQ,KAAKE,QAAjB,EAA2B;AACzB,eAAO,KAAKA,QAAL,CAAcF,IAAd,CAAP;AACD;AACD,UAAMiB,QAAQ,IAAIpB,SAAJ,CAAc,KAAKC,KAAL,CAAWE,IAAX,CAAd,EAAgC,IAAhC,EAAsCA,IAAtC,CAAd;AACA,WAAKC,QAAL,CAAcd,IAAd,CAAmB8B,KAAnB;AACA,WAAKf,QAAL,CAAcF,IAAd,IAAsBiB,KAAtB;AACA,aAAOA,KAAP;AACD;;;kCAEajB,I,EAAM;AAClB,aAAO,CAACA,gBAAgBtB,KAAhB,GACFsB,IADE,GAEFA,KAAKkB,KAAL,CAAW1C,QAAQC,SAAnB,CAFC,EAGL0C,MAHK,CAGE,UAACpB,MAAD,EAASC,IAAT;AAAA,eAAkBD,OAAOkB,KAAP,CAAajB,IAAb,CAAlB;AAAA,OAHF,EAGwC,IAHxC,CAAP;AAID;;;;;;AAGI,SAAStC,OAAT,CAAiB0D,OAAjB,EAA0B;AAC/B,MAAMC,QAAQzC,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAd;AACA,MAAI,CAACe,MAAMC,MAAX,EAAmB;AACjB,WAAO,CAACF,OAAR;AACD;AACD,MAAMX,WAAWc,MAAMH,OAAN,CAAjB;AAL+B;AAAA;AAAA;;AAAA;AAM/B,0BAAiBC,KAAjB,mIAAwB;AAAA,UAAfG,IAAe;;AACtBf,eAASe,IAAT,IAAiB,CAACf,SAASe,IAAT,CAAlB;AACD;AAR8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAS/B,SAAOf,QAAP;AACD;;AAEM,SAAS9C,MAAT,CAAgByD,OAAhB,EAAyB;AAC9B,MAAMC,QAAQzC,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAd;AACA,MAAI,CAACc,OAAL,EAAc;AACd,MAAIX,WAAWW,OAAf;AACAC,QAAMI,OAAN,CAAc,gBAAQ;AACpB,QAAID,QAAQf,QAAZ,EAAsB;AACpB,UAAIA,aAAaW,OAAjB,EAA0B;AACxBX,mBAAWc,MAAMH,OAAN,CAAX;AACD;AACD,aAAOX,SAASe,IAAT,CAAP;AACD;AACF,GAPD;;AASA,SAAOf,QAAP;AACD;;AAED,SAASiB,OAAT,CAAiBC,KAAjB,EAAwBxB,QAAxB,EAAkC;AAChC,MAAI,CAACwB,KAAL,EAAY;AACVA,YAAQ,EAAR;AACD,GAFD,MAEO;AACLA,YAAQA,MAAM9C,KAAN,EAAR;AACD;AACDsB,WAASwB,KAAT;AACA,SAAOA,KAAP;AACD;;AAEM,SAAS/D,OAAT,CAAiB+D,KAAjB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAMC,WAAWlD,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAjB;AACA,MAAIwB,SAASR,MAAT,IAAmBO,KAAvB,EAA8B;AAC5B,WAAOH,QAAQC,KAAR,EAAe;AAAA,aACpBrC,YAAYoB,KAAZ,CAAkBK,CAAlB,EAAqB,CAACa,KAAD,EAAQC,KAAR,EAAelB,MAAf,CAAsBmB,QAAtB,CAArB,CADoB;AAAA,KAAf,CAAP;AAGD;AACD,SAAOH,KAAP;AACD;;AAEM,SAAS9D,KAAT,CAAe8D,KAAf,EAAsB;AAC3B,MAAMG,WAAWlD,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAjB;AACA,MAAIwB,SAASR,MAAb,EAAqB;AACnB,WAAOI,QAAQC,KAAR,EAAe;AAAA,aAAKzC,UAAUwB,KAAV,CAAgBK,CAAhB,EAAmBe,QAAnB,CAAL;AAAA,KAAf,CAAP;AACD;AACD,SAAOH,KAAP;AACD;;AAEM,SAAS7D,QAAT,CAAkB6D,KAAlB,EAAyB;AAC9B,MAAMG,WAAWlD,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAjB;AACA,MAAIwB,SAASR,MAAb,EAAqB;AACnB,WAAOI,QAAQC,KAAR,EAAe;AAAA,aAAK3C,aAAa0B,KAAb,CAAmBK,CAAnB,EAAsBe,QAAtB,CAAL;AAAA,KAAf,CAAP;AACD;AACD,SAAOH,KAAP;AACD;;AAEM,SAAS5D,IAAT,CAAc4D,KAAd,EAAqB;AAC1B,MAAI,CAACA,KAAD,IAAUA,MAAML,MAApB,EAA4B;AAC1B,WAAOI,QAAQC,KAAR,EAAe;AAAA,aAAKZ,EAAE1B,GAAF,EAAL;AAAA,KAAf,CAAP;AACD;AACD,SAAOsC,KAAP;AACD;;AAEM,SAAS3D,MAAT,CAAgB2D,KAAhB,EAAuB;AAC5B,MAAI,CAACA,KAAD,IAAUA,MAAML,MAApB,EAA4B;AAC1B,WAAOI,QAAQC,KAAR,EAAe;AAAA,aAAKZ,EAAEhC,KAAF,EAAL;AAAA,KAAf,CAAP;AACD;AACD,SAAO4C,KAAP;AACD;;AAEM,SAAS1D,KAAT,CAAe0D,KAAf,EAAsBI,MAAtB,EAA8B;AACnC,SAAOL,QAAQC,KAAR,EAAe;AAAA,WAAKZ,EAAEtB,IAAF,CAAOsC,MAAP,CAAL;AAAA,GAAf,CAAP;AACD;;AAED,SAASR,KAAT,CAAezB,KAAf,EAAsB;AACpB,MAAIA,iBAAiBpB,KAArB,EAA4B,OAAOoB,MAAMjB,KAAN,EAAP;AAC5B,SAAOc,OAAOC,MAAP,CAAc,EAAd,EAAkBE,KAAlB,CAAP;AACD;;AAED,IAAMgB,gBAAgB,SAAhBA,aAAgB;AAAA,SACpB,CAAC,CAACkB,GAAF,IAAS,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAxB,IAAoCA,IAAIC,WAAJ,KAAoBtC,MADpC;AAAA,CAAtB;;AAGO,SAASzB,OAAT,CAAiByD,KAAjB,EAAwB;AAC7B,MAAMO,QAAQtD,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAd;AACA,MAAM6B,WAAWR,MAAMX,MAAN,CAAa;AAAA,WAAKkB,MAAME,OAAN,CAAcrB,CAAd,MAAqB,CAAC,CAA3B;AAAA,GAAb,CAAjB;AACA,SAAOoB,SAASb,MAAT,KAAoBK,MAAML,MAA1B,GAAmCK,KAAnC,GAA2CQ,QAAlD;AACD;;AAEM,SAAShE,KAAT,CAAeiD,OAAf,EAAwBiB,IAAxB,EAA8BC,EAA9B,EAAkC;AACvC,MAAM7B,WAAWc,MAAMH,OAAN,CAAjB;AACA,MAAMmB,OAAO9B,SAAS4B,IAAT,CAAb;AACA5B,WAAS4B,IAAT,IAAiB5B,SAAS6B,EAAT,CAAjB;AACA7B,WAAS6B,EAAT,IAAeC,IAAf;AACA,SAAO9B,QAAP;AACD;;AAEM,SAASrC,OAAT,CAAiBoE,GAAjB,EAAsB;AAC3B,MAAMC,SAAS7D,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAf;AACA,MAAImC,OAAOnB,MAAX,EAAmB;AACjB,QAAIoB,YAAYF,GAAhB;AACAC,WAAOhB,OAAP,CAAe,iBAAS;AACtB,UAAI3B,UAAU,IAAV,IAAkBA,UAAU6C,SAAhC,EAA2C;AAC3C,WAAK,IAAIC,GAAT,IAAgB9C,KAAhB,EAAuB;AACrB,YAAIA,MAAM8C,GAAN,MAAeF,UAAUE,GAAV,CAAnB,EAAmC;AACjC,cAAIF,cAAcF,GAAlB,EAAuB;AACrBE,wBAAY/C,OAAOC,MAAP,CAAc,EAAd,EAAkB4C,GAAlB,CAAZ;AACD;AACDE,oBAAUE,GAAV,IAAiB9C,MAAM8C,GAAN,CAAjB;AACD;AACF;AACF,KAVD;AAWA,WAAOF,SAAP;AACD;;AAED,SAAOF,GAAP;AACD;;AAED,SAASK,mBAAT,CAA6BC,OAA7B,EAAsC;AACpC,MAAMC,QAAQ,IAAIC,KAAJ,CAAU;AAAA,WAAKL,SAAL;AAAA,GAAV,EAA0B;AACtCM,OADsC,eAClCC,MADkC,EAC1B1B,IAD0B,EACpB;AAChB,UAAIA,SAAS,aAAb,EAA4B,OAAOsB,OAAP;AAC5BA,gBAAUA,QAAQ7B,KAAR,CAAcO,IAAd,CAAV;AACA,aAAOuB,KAAP;AACD,KALqC;AAMtCI,OANsC,eAMlCD,MANkC,EAM1B1B,IAN0B,EAMpB1B,KANoB,EAMb;AACvBgD,cAAQpC,KAAR,CAAcrC,IAAd,EAAoBmD,IAApB,EAA0B1B,KAA1B;AACA,aAAOiD,KAAP;AACD,KATqC;AAUtCrC,SAVsC,iBAUhCwC,MAVgC,EAUxBE,OAVwB,EAUfhD,IAVe,EAUT;AAC3B,UAAMiD,SAASP,QAAQ9C,IAAvB;AACA;AACA8C,gBAAUA,QAAQQ,YAAR,EAAV;AACAR,cAAQpC,KAAR,CAAcA,KAAd,CAAoBoC,OAApB,EAA6B,CAACO,MAAD,EAAS1C,MAAT,CAAgBP,IAAhB,CAA7B;AACA,aAAO2C,KAAP;AACD;AAhBqC,GAA1B,CAAd;AAkBA,SAAOA,KAAP;AACD;;AAEM,SAAS1E,IAAT,CAAc+C,OAAd,EAAuB;AAC5B,MAAMhB,OAAOxB,WAAWyB,IAAX,CAAgBC,SAAhB,EAA2B,CAA3B,CAAb;AACA,MAAIF,KAAKkB,MAAL,GAAc,CAAlB,EAAqB;AACnB,WAAOlB,KAAK,CAAL,CAAP;AACD;AACD;AACA,MAAMoB,OAAOpB,KAAK,CAAL,CAAb;AACA,MAAMN,QAAQM,KAAK,CAAL,CAAd;AACA,MAAMK,WAAWc,MAAMH,OAAN,CAAjB;AACAX,WAASe,IAAT,IAAiB1B,KAAjB;AACA,SAAOW,QAAP;AACD;;AAED,SAAS8C,SAAT,CAAmBxD,MAAnB,EAA2ByD,IAA3B,EAAiC;AAAA;AAAA;AAAA;;AAAA;AAC/B,0BAAiB7D,OAAO8D,OAAP,CAAeD,IAAf,CAAjB,mIAAuC;AAAA,UAA9BE,IAA8B;;AACrC,UAAMd,MAAMc,KAAK,CAAL,CAAZ;AACA,UAAI5D,QAAQ4D,KAAK,CAAL,CAAZ;AACA;AACA,UAAI5D,iBAAiB6D,QAArB,EAA+B;AAC7B7D,gBAAQ,CAACA,KAAD,CAAR;AACD;AACD,UAAMmB,QAAQlB,OAAO6D,aAAP,CAAqBhB,GAArB,CAAd;AACA,UAAI9C,iBAAiBpB,KAArB,EAA4B;AAC1B;AACA,YAAIoB,MAAM,CAAN,aAAoB6D,QAApB,IAAgC,OAAO7D,MAAM,CAAN,CAAP,KAAoB,QAAxD,EAAkE;AAChE;AACAmB,gBAAMP,KAAN,CAAYA,KAAZ,CAAkBO,KAAlB,EAAyBnB,KAAzB;AACD,SAHD,MAGO;AACL;AACA,cAAM+D,OAAO/D,MAAM,CAAN,CAAb;AACA,cAAI+D,gBAAgBnF,KAApB,EAA2B;AACzB;AADyB;AAAA;AAAA;;AAAA;AAEzB,oCAAgBiB,OAAOmE,IAAP,CAAY7C,MAAMnB,KAAlB,CAAhB,mIAA0C;AAAA,oBAAjC8C,IAAiC;;AACxC,oBAAMmB,WAAW9C,MAAMA,KAAN,CAAY2B,IAAZ,CAAjB;AACAmB,yBAASrD,KAAT,CAAeA,KAAf,CAAqBqD,QAArB,EAA+BF,IAA/B;AACD;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1B,WAND,MAMO;AAAA;AAAA;AAAA;;AAAA;AACL,oCAAgBlE,OAAOmE,IAAP,CAAY7C,MAAMnB,KAAlB,CAAhB,mIAA0C;AAAA,oBAAjC8C,KAAiC;;AACxCW,0BAAUtC,MAAMA,KAAN,CAAY2B,KAAZ,CAAV,EAA4BiB,IAA5B;AACD;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIN;AACF;AACF,OApBD,MAoBO,IAAI/C,cAAchB,KAAd,CAAJ,EAA0B;AAC/ByD,kBAAUtC,KAAV,EAAiBnB,KAAjB;AACD,OAFM,MAEA;AACLmB,cAAMP,KAAN,CAAYrC,IAAZ,EAAkByB,KAAlB;AACD;AACF;AAlC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmChC;;AAEM,IAAMkE,0BAAS,SAATA,MAAS,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACxC,MAAMC,OAAO,IAAItE,SAAJ,CAAcoE,KAAd,CAAb;;AAEA,MAAIC,mBAAmBxF,KAAvB,EAA8B;AAC5ByF,SAAKzD,KAAL,CAAWA,KAAX,CAAiByD,IAAjB,EAAuBD,OAAvB;AACD,GAFD,MAEO;AACLX,cAAUY,IAAV,EAAgBD,OAAhB;AACD;;AAED,SAAOC,KAAKrE,KAAZ;AACD,CAVM;;AAYA,SAASxB,UAAT,CAAoB2F,KAApB,EAAqC;AAC1C,MAAME,OAAO,IAAItE,SAAJ,CAAcoE,KAAd,CAAb;;AAD0C,oCAAPG,KAAO;AAAPA,SAAO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAG1C,0BAAiBA,KAAjB,mIAAwB;AAAA,UAAfP,IAAe;;AACtB,UAAIA,gBAAgBF,QAApB,EAA8B;AAC5BE,eAAO,CAACA,IAAD,CAAP;AACD;AACD,UAAMQ,WAAWR,KAAK,CAAL,CAAjB;AACA,UAAMzD,OAAOyD,KAAKhF,KAAL,CAAW,CAAX,CAAb;AACA,UAAM2E,OAAOa,SAASxB,oBAAoBsB,IAApB,CAAT,EAAoCG,WAAjD;AACA,UAAIlE,KAAKkB,MAAT,EAAiB;AACfkC,aAAK9C,KAAL,CAAWA,KAAX,CAAiB8C,IAAjB,EAAuBpD,IAAvB;AACD;AACF;AAbyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe1C,SAAO+D,KAAKrE,KAAZ;AACD;;kBAEckE,M;AAER,IAAMzD,4BAAU;AACrB,OAAKlC,IADgB;AAErBD,kBAFqB;AAGrBwB,UAAQxB,OAHa;AAIrBL,YAJqB;AAKrBsB,OAAKtB,IALgB;AAMrBF,cANqB;AAOrBsB,QAAMtB,KAPe;AAQrBK,kBARqB;AASrBqG,UAAQrG,OATa;AAUrBG,YAVqB;AAWrB8E,OAAK9E,IAXgB;AAYrBL,gBAZqB;AAarBe,SAAOf,MAbc;AAcrBC,cAdqB;AAerBwB,QAAMxB,KAfe;AAgBrBL,kBAhBqB;AAiBrB2B,UAAQ3B,OAjBa;AAkBrBF,kBAlBqB;AAmBrB8G,UAAQ9G,OAnBa;AAoBrBC,gBApBqB;AAqBrB8G,SAAO9G,MArBc;AAsBrBG,oBAtBqB;AAuBrBmB,WAASnB,QAvBY;AAwBrBK,cAxBqB;AAyBrBuG,QAAMvG;AAzBe,CAAhB;;AA4BA,SAASI,MAAT,CAAgBoG,IAAhB,EAAsBtB,MAAtB,EAA8B;AACnC,MAAIvC,cAAc6D,IAAd,CAAJ,EAAyB;AACvBhF,WAAOC,MAAP,CAAcW,OAAd,EAAuB8C,MAAvB;AACD,GAFD,MAEO;AACL9C,YAAQoE,IAAR,IAAgBtB,MAAhB;AACD;AACF","file":"index.js","sourcesContent":["const configs = {\r\n  separator: '.'\r\n};\r\n\r\nconst {\r\n  slice: arraySlice,\r\n  shift: arrayShift,\r\n  unshift: arrayUnshift,\r\n  push: arrayPush,\r\n  pop: arrayPop,\r\n  splice: arraySplice,\r\n  sort: arraySort\r\n} = Array.prototype;\r\n\r\nexport function configure(newConfigs) {\r\n  Object.assign(configs, newConfigs);\r\n}\r\n\r\nclass Immutable {\r\n  constructor(value, parent, path) {\r\n    this.parent = parent;\r\n    this.value = value;\r\n    this.path = path;\r\n    this.children = [];\r\n    this.childMap = {};\r\n  }\r\n\r\n  apply(modifier) {\r\n    const args = arraySlice.call(arguments, 1);\r\n    if (typeof modifier === 'string') {\r\n      if (modifier in actions) {\r\n        modifier = actions[modifier];\r\n      } else {\r\n        throw new Error(`No action '${modifier}'' defined`);\r\n      }\r\n    }\r\n    const newValue = modifier.apply(null, [this.value].concat(args));\r\n    if (newValue !== this.value) {\r\n      this.value = newValue;\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  change() {\r\n    if (!this.changed) {\r\n      this.changed = true;\r\n      if (this.value instanceof Array) {\r\n        this.value = this.value.slice();\r\n      } else if (isPlainObject(this.value)) {\r\n        this.value = Object.assign({}, this.value);\r\n      }\r\n    }\r\n\r\n    for (let x of this.children) {\r\n      this.value[x.path] = x.value;\r\n    }\r\n\r\n    if (this.parent) {\r\n      this.parent.change();\r\n    }\r\n  }\r\n\r\n  backToParent() {\r\n    // make sure child should be removed fron its parent\r\n    this.parent.children = this.parent.children.filter(x => x !== this);\r\n    delete this.parent.childMap[this.path];\r\n    return this.parent;\r\n  }\r\n\r\n  child(path) {\r\n    if (path in this.childMap) {\r\n      return this.childMap[path];\r\n    }\r\n    const child = new Immutable(this.value[path], this, path);\r\n    this.children.push(child);\r\n    this.childMap[path] = child;\r\n    return child;\r\n  }\r\n\r\n  childFromPath(path) {\r\n    return (path instanceof Array\r\n        ? path\r\n        : path.split(configs.separator)\r\n    ).reduce((parent, path) => parent.child(path), this);\r\n  }\r\n}\r\n\r\nexport function $toggle(current) {\r\n  const props = arraySlice.call(arguments, 1);\r\n  if (!props.length) {\r\n    return !current;\r\n  }\r\n  const newValue = clone(current);\r\n  for (let prop of props) {\r\n    newValue[prop] = !newValue[prop];\r\n  }\r\n  return newValue;\r\n}\r\n\r\nexport function $unset(current) {\r\n  const props = arraySlice.call(arguments, 1);\r\n  if (!current) return;\r\n  let newValue = current;\r\n  props.forEach(prop => {\r\n    if (prop in newValue) {\r\n      if (newValue === current) {\r\n        newValue = clone(current);\r\n      }\r\n      delete newValue[prop];\r\n    }\r\n  });\r\n\r\n  return newValue;\r\n}\r\n\r\nfunction arrayOp(array, modifier) {\r\n  if (!array) {\r\n    array = [];\r\n  } else {\r\n    array = array.slice();\r\n  }\r\n  modifier(array);\r\n  return array;\r\n}\r\n\r\nexport function $splice(array, index, count) {\r\n  const newItems = arraySlice.call(arguments, 3);\r\n  if (newItems.length || count) {\r\n    return arrayOp(array, x =>\r\n      arraySplice.apply(x, [index, count].concat(newItems))\r\n    );\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function $push(array) {\r\n  const newItems = arraySlice.call(arguments, 1);\r\n  if (newItems.length) {\r\n    return arrayOp(array, x => arrayPush.apply(x, newItems));\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function $unshift(array) {\r\n  const newItems = arraySlice.call(arguments, 1);\r\n  if (newItems.length) {\r\n    return arrayOp(array, x => arrayUnshift.apply(x, newItems));\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function $pop(array) {\r\n  if (!array || array.length) {\r\n    return arrayOp(array, x => x.pop());\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function $shift(array) {\r\n  if (!array || array.length) {\r\n    return arrayOp(array, x => x.shift());\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function $sort(array, sorter) {\r\n  return arrayOp(array, x => x.sort(sorter));\r\n}\r\n\r\nfunction clone(value) {\r\n  if (value instanceof Array) return value.slice();\r\n  return Object.assign({}, value);\r\n}\r\n\r\nconst isPlainObject = val =>\r\n  !!val && typeof val === 'object' && val.constructor === Object;\r\n\r\nexport function $remove(array) {\r\n  const items = arraySlice.call(arguments, 1);\r\n  const newArray = array.filter(x => items.indexOf(x) === -1);\r\n  return newArray.length === array.length ? array : newArray;\r\n}\r\n\r\nexport function $swap(current, from, to) {\r\n  const newValue = clone(current);\r\n  const temp = newValue[from];\r\n  newValue[from] = newValue[to];\r\n  newValue[to] = temp;\r\n  return newValue;\r\n}\r\n\r\nexport function $assign(obj) {\r\n  const values = arraySlice.call(arguments, 1);\r\n  if (values.length) {\r\n    let mergedObj = obj;\r\n    values.forEach(value => {\r\n      if (value === null || value === undefined) return;\r\n      for (let key in value) {\r\n        if (value[key] !== mergedObj[key]) {\r\n          if (mergedObj === obj) {\r\n            mergedObj = Object.assign({}, obj);\r\n          }\r\n          mergedObj[key] = value[key];\r\n        }\r\n      }\r\n    });\r\n    return mergedObj;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction createSelectorProxy(context) {\r\n  const proxy = new Proxy(x => undefined, {\r\n    get(target, prop) {\r\n      if (prop === '__context__') return context;\r\n      context = context.child(prop);\r\n      return proxy;\r\n    },\r\n    set(target, prop, value) {\r\n      context.apply($set, prop, value);\r\n      return proxy;\r\n    },\r\n    apply(target, thisArg, args) {\r\n      const action = context.path;\r\n      // back to parent node\r\n      context = context.backToParent();\r\n      context.apply.apply(context, [action].concat(args));\r\n      return proxy;\r\n    }\r\n  });\r\n  return proxy;\r\n}\r\n\r\nexport function $set(current) {\r\n  const args = arraySlice.call(arguments, 1);\r\n  if (args.length < 2) {\r\n    return args[0];\r\n  }\r\n  // don't use destructing to improve performance\r\n  const prop = args[0];\r\n  const value = args[1];\r\n  const newValue = clone(current);\r\n  newValue[prop] = value;\r\n  return newValue;\r\n}\r\n\r\nfunction traversal(parent, node) {\r\n  for (let pair of Object.entries(node)) {\r\n    const key = pair[0];\r\n    let value = pair[1];\r\n    // convert obj method to custom modifier\r\n    if (value instanceof Function) {\r\n      value = [value];\r\n    }\r\n    const child = parent.childFromPath(key);\r\n    if (value instanceof Array) {\r\n      // is spec\r\n      if (value[0] instanceof Function || typeof value[0] === 'string') {\r\n        // is modifier and its args\r\n        child.apply.apply(child, value);\r\n      } else {\r\n        // is sub spec\r\n        const spec = value[0];\r\n        if (spec instanceof Array) {\r\n          // apply for each child\r\n          for (let key of Object.keys(child.value)) {\r\n            const newChild = child.child(key);\r\n            newChild.apply.apply(newChild, spec);\r\n          }\r\n        } else {\r\n          for (let key of Object.keys(child.value)) {\r\n            traversal(child.child(key), spec);\r\n          }\r\n        }\r\n      }\r\n    } else if (isPlainObject(value)) {\r\n      traversal(child, value);\r\n    } else {\r\n      child.apply($set, value);\r\n    }\r\n  }\r\n}\r\n\r\nexport const update = (state, changes) => {\r\n  const root = new Immutable(state);\r\n\r\n  if (changes instanceof Array) {\r\n    root.apply.apply(root, changes);\r\n  } else {\r\n    traversal(root, changes);\r\n  }\r\n\r\n  return root.value;\r\n};\r\n\r\nexport function updatePath(state, ...specs) {\r\n  const root = new Immutable(state);\r\n\r\n  for (let spec of specs) {\r\n    if (spec instanceof Function) {\r\n      spec = [spec];\r\n    }\r\n    const selector = spec[0];\r\n    const args = spec.slice(1);\r\n    const node = selector(createSelectorProxy(root)).__context__;\r\n    if (args.length) {\r\n      node.apply.apply(node, args);\r\n    }\r\n  }\r\n\r\n  return root.value;\r\n}\r\n\r\nexport default update;\r\n\r\nexport const actions = {\r\n  '=': $set,\r\n  $assign,\r\n  assign: $assign,\r\n  $pop,\r\n  pop: $pop,\r\n  $push,\r\n  push: $push,\r\n  $remove,\r\n  remove: $remove,\r\n  $set,\r\n  set: $set,\r\n  $shift,\r\n  shift: $shift,\r\n  $sort,\r\n  sort: $sort,\r\n  $splice,\r\n  splice: $splice,\r\n  $toggle,\r\n  toggle: $toggle,\r\n  $unset,\r\n  unset: $unset,\r\n  $unshift,\r\n  unshift: $unshift,\r\n  $swap,\r\n  swap: $swap\r\n};\r\n\r\nexport function define(name, action) {\r\n  if (isPlainObject(name)) {\r\n    Object.assign(actions, action);\r\n  } else {\r\n    actions[name] = action;\r\n  }\r\n}\r\n"]}